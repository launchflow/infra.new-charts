apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infranew.name" . }}
spec:
  replicas: {{.Values.infranew.replicaCount}}
  selector:
    matchLabels:
      app: {{ include "infranew.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "infranew.name" . }}
    spec:
      containers:
        - name: {{ include "infranew.name" . }}
          image: "{{ .Values.infranew.image.repository }}:{{ .Values.infranew.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{.Values.infranew.image.pullPolicy}}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
            - name: SCHEDULER_URL
              value: "unused"
            - name: SPACELIFT_API_KEY_ENDPOINT
              value: "{{ .Values.infranew.spaceliftApiKeyEndpoint }}"
            {{- if or .Values.infranew.existingSecretSpaceliftApiKeyId .Values.infranew.spaceliftApiKeyId }}
            - name: SPACELIFT_API_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.infranew.existingSecretSpaceliftApiKeyId | default (printf "%s-secrets-helm" (include "infranew.name" .)) }}
                  key: {{ .Values.infranew.existingSecretSpaceliftApiKeyIdKey | default "spaceliftApiKeyId" }}
            - name: SPACELIFT_API_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.infranew.existingSecretSpaceliftApiKeySecret | default (printf "%s-secrets-helm" (include "infranew.name" .)) }}
                  key: {{ .Values.infranew.existingSecretSpaceliftApiKeySecretKey | default "spaceliftApiKeySecret" }}
            {{- end }}
            {{- if or .Values.infranew.existingSecretAnthropicApiKey .Values.infranew.anthropicApiKey }}
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.infranew.existingSecretAnthropicApiKey | default (printf "%s-secrets-helm" (include "infranew.name" .)) }}
                  key: {{ .Values.infranew.existingSecretAnthropicApiKeyKey | default "anthropicApiKey" }}
            {{- end }}
            - name: API_BACKEND
              value: "http://{{ include "infranew.name" . }}-cost-service:8080"
            - name: GCS_BUCKET_NAME
              value: {{.Values.infranew.gcsBucketName}}
            - name: GOOGLE_VERTEX_PROJECT
              value: {{.Values.infranew.googleVertexProject}}
          envFrom:
            - configMapRef:
                name: {{ include "infranew.name" . }}-postgres-config
            - secretRef:
                name: {{ include "infranew.name" . }}-postgres-secret
          resources:
            {{- toYaml .Values.infranew.resources | nindent 12 }}
